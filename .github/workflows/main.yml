name: Build, push and deploy
on:
  workflow_dispatch:
  push:

jobs:
  test-api:
    name: Run backend tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Run maven tests
        run: mvn -f ./api/pom.xml -B verify

  test-web-app:
    name: Run frontend tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: 'web-app/package-lock.json'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: npm ci --prefix web-app
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run tests
        run: npm run test --prefix web-app

  test-build-and-push:
    name: Test, build and push
    permissions:
      contents: 'write'
      id-token: 'write'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: 'web-app/package-lock.json'
          registry-url: 'https://npm.pkg.github.com'

      - name: Build maven artifacts
        run: mvn -f ./api/pom.xml -B package

      - name: Install dependencies
        run: npm ci --prefix web-app
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run web-app tests
        run: npm test --prefix web-app

      - name: Build frontend assets
        run: npm run build --prefix web-app

      - name: Build and push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: poao
          tag: ${{ env.IMAGE_TAG }}

      - name: Create image tag
        run: echo "IMAGE_TAG=$(TZ=\"Europe/Oslo\" date +%Y.%m.%d_%H.%M)-$(git rev-parse --short=12 HEAD)" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release kafka-manager
          tag_name: ${{ env.IMAGE_TAG }}
          prerelease: false
